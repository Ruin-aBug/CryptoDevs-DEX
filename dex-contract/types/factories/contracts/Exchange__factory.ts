/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Exchange, ExchangeInterface } from "../../contracts/Exchange";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_cryptoDevToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "addLiquidit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cryptoDevToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenSold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_mintEth",
        type: "uint256",
      },
    ],
    name: "cryptoDevTokenToEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintTokens",
        type: "uint256",
      },
    ],
    name: "ethToCryptoDevToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "inputReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputReserve",
        type: "uint256",
      },
    ],
    name: "getAmountOfTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserve",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200161538038062001615833981016040819052620000349162000112565b6040518060400160405280601281526020017121b93cb83a37a232bb102628102a37b5b2b760711b81525060405180604001604052806004815260200163043444c560e41b81525081600390816200008d9190620001e9565b5060046200009c8282620001e9565b5050506001600160a01b038116620000ec5760405162461bcd60e51b815260206004820152600f60248201526e61646472657373206973207a65726f60881b604482015260640160405180910390fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055620002b5565b6000602082840312156200012557600080fd5b81516001600160a01b03811681146200013d57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200016f57607f821691505b6020821081036200019057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001e457600081815260208120601f850160051c81016020861015620001bf5750805b601f850160051c820191505b81811015620001e057828155600101620001cb565b5050505b505050565b81516001600160401b0381111562000205576200020562000144565b6200021d816200021684546200015a565b8462000196565b602080601f8311600181146200025557600084156200023c5750858301515b600019600386901b1c1916600185901b178555620001e0565b600085815260208120601f198616915b82811015620002865788860151825594840194600190910190840162000265565b5085821015620002a55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61135080620002c56000396000f3fe6080604052600436106101095760003560e01c806370a08231116100955780639c8f9f23116100645780639c8f9f23146102d1578063a457c2d714610306578063a9059cbb14610326578063dd62ed3e14610346578063f0566bb71461036657600080fd5b806370a08231146102535780637386479e1461028957806392fcb3c5146102a957806395d89b41146102bc57600080fd5b806323b872dd116100dc57806323b872dd146101c0578063313ce567146101e057806339509351146101fc57806359bf5d391461021c5780636c25a25a1461023157600080fd5b806306fdde031461010e578063095ea7b3146101395780631528d6dc1461016957806318160ddd146101a1575b600080fd5b34801561011a57600080fd5b50610123610379565b60405161013091906110a4565b60405180910390f35b34801561014557600080fd5b5061015961015436600461110e565b61040b565b6040519015158152602001610130565b34801561017557600080fd5b50600554610189906001600160a01b031681565b6040516001600160a01b039091168152602001610130565b3480156101ad57600080fd5b506002545b604051908152602001610130565b3480156101cc57600080fd5b506101596101db366004611138565b610425565b3480156101ec57600080fd5b5060405160128152602001610130565b34801561020857600080fd5b5061015961021736600461110e565b610449565b34801561022857600080fd5b506101b261046b565b34801561023d57600080fd5b5061025161024c366004611174565b6104dd565b005b34801561025f57600080fd5b506101b261026e366004611196565b6001600160a01b031660009081526020819052604090205490565b34801561029557600080fd5b506101b26102a43660046111b8565b6105fd565b6101b26102b73660046111e4565b610699565b3480156102c857600080fd5b5061012361088d565b3480156102dd57600080fd5b506102f16102ec3660046111e4565b61089c565b60408051928352602083019190915201610130565b34801561031257600080fd5b5061015961032136600461110e565b6109e4565b34801561033257600080fd5b5061015961034136600461110e565b610a5f565b34801561035257600080fd5b506101b26103613660046111fd565b610a6d565b6102516103743660046111e4565b610a98565b60606003805461038890611230565b80601f01602080910402602001604051908101604052809291908181526020018280546103b490611230565b80156104015780601f106103d657610100808354040283529160200191610401565b820191906000526020600020905b8154815290600101906020018083116103e457829003601f168201915b5050505050905090565b600033610419818585610b7e565b60019150505b92915050565b600033610433858285610ca3565b61043e858585610d17565b506001949350505050565b60003361041981858561045c8383610a6d565b6104669190611280565b610b7e565b6005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156104b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d89190611293565b905090565b60006104e761046b565b905060006104f68483476105fd565b90508281101561054d5760405162461bcd60e51b815260206004820152601a60248201527f696e73756666696369656e74206f757470757420616d6f756e7400000000000060448201526064015b60405180910390fd5b6005546040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c891906112ac565b50604051339082156108fc029083906000818181858888f193505050501580156105f6573d6000803e3d6000fd5b5050505050565b6000808311801561060e5750600082115b61064d5760405162461bcd60e51b815260206004820152601060248201526f696e76616c696420726573657276657360801b6044820152606401610544565b600061065a8560636112ce565b9050600061066884836112ce565b90506000826106788760646112ce565b6106829190611280565b905061068e81836112e5565b979650505050505050565b60008047816106a661046b565b90508060000361073e576005546040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072b91906112ac565b508192506107393384610ebb565b610884565b600061074a3484611307565b905060008161075984346112ce565b61076391906112e5565b90508087116107da5760405162461bcd60e51b815260206004820152603e60248201527f416d6f756e74206f6620746f6b656e732073656e74206973206c65737320746860448201527f616e20746865206d696e696d756d20746f6b656e7320726571756972656400006064820152608401610544565b6005546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610831573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085591906112ac565b50813461086160025490565b61086b91906112ce565b61087591906112e5565b94506108813386610ebb565b50505b50909392505050565b60606004805461038890611230565b600080600083116108e15760405162461bcd60e51b815260206004820152600f60248201526e5f616d6f756e74206973207a65726f60881b6044820152606401610544565b4760006108ed60025490565b90506000816108fc87856112ce565b61090691906112e5565b90506000828761091461046b565b61091e91906112ce565b61092891906112e5565b90506109343388610f7a565b604051339083156108fc029084906000818181858888f19350505050158015610961573d6000803e3d6000fd5b5060055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156109b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d791906112ac565b5090969095509350505050565b600033816109f28286610a6d565b905083811015610a525760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610544565b61043e8286868403610b7e565b600033610419818585610d17565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000610aa261046b565b90506000610ab13447846105fd565b905082811015610b035760405162461bcd60e51b815260206004820152601a60248201527f696e73756666696369656e74206f757470757420616d6f756e740000000000006044820152606401610544565b60055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610b54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7891906112ac565b50505050565b6001600160a01b038316610be05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610544565b6001600160a01b038216610c415760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610544565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610caf8484610a6d565b90506000198114610b785781811015610d0a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610544565b610b788484848403610b7e565b6001600160a01b038316610d7b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610544565b6001600160a01b038216610ddd5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610544565b6001600160a01b03831660009081526020819052604090205481811015610e555760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610544565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610b78565b6001600160a01b038216610f115760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610544565b8060026000828254610f239190611280565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610fda5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610544565b6001600160a01b0382166000908152602081905260409020548181101561104e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610544565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610c96565b600060208083528351808285015260005b818110156110d1578581018301518582016040015282016110b5565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461110957600080fd5b919050565b6000806040838503121561112157600080fd5b61112a836110f2565b946020939093013593505050565b60008060006060848603121561114d57600080fd5b611156846110f2565b9250611164602085016110f2565b9150604084013590509250925092565b6000806040838503121561118757600080fd5b50508035926020909101359150565b6000602082840312156111a857600080fd5b6111b1826110f2565b9392505050565b6000806000606084860312156111cd57600080fd5b505081359360208301359350604090920135919050565b6000602082840312156111f657600080fd5b5035919050565b6000806040838503121561121057600080fd5b611219836110f2565b9150611227602084016110f2565b90509250929050565b600181811c9082168061124457607f821691505b60208210810361126457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561041f5761041f61126a565b6000602082840312156112a557600080fd5b5051919050565b6000602082840312156112be57600080fd5b815180151581146111b157600080fd5b808202811582820484141761041f5761041f61126a565b60008261130257634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561041f5761041f61126a56fea2646970667358221220e8ca7da9ac576c6b55c8f7a9a27ac422fabfca723f294d0298b89e70070ad3b064736f6c63430008110033";

type ExchangeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExchangeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Exchange__factory extends ContractFactory {
  constructor(...args: ExchangeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _cryptoDevToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Exchange> {
    return super.deploy(_cryptoDevToken, overrides || {}) as Promise<Exchange>;
  }
  override getDeployTransaction(
    _cryptoDevToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_cryptoDevToken, overrides || {});
  }
  override attach(address: string): Exchange {
    return super.attach(address) as Exchange;
  }
  override connect(signer: Signer): Exchange__factory {
    return super.connect(signer) as Exchange__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExchangeInterface {
    return new utils.Interface(_abi) as ExchangeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Exchange {
    return new Contract(address, _abi, signerOrProvider) as Exchange;
  }
}
